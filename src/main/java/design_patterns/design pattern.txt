Design patterns(dp) are standard solutions to commonly occuring problems
dp are divided into three categories
1. creational
2. structural
3. behvioural

1. creational::
	Provides solutions to create objects in a best possible way

		- Singleton : ensures only one object per jvm
			Used for logging, drivers objects, caching and thread pool.
			Eg: java.lang.Runtime, java.awt.Desktop.

		- Factory Pattern : Factory to create multiple instances based on input
			provides low coupling and easy to extend functionality, clean separation of implementation concerns
			Eg: 
			1. java.util.Calendar, ResourceBundle and NumberFormat getInstance() methods uses Factory pattern
			2. valueOf() method in wrapper classes like Boolean, Integer etc.
		
		-Abstarct Factory Pattern : Abstract Factory patterns work around a super-factory which creates other factories. Its like “factory of factories” and can be easily extended to accommodate more products.

		-Builder Design Pattern : construct a complex object from simple objects using step-by-step approach
